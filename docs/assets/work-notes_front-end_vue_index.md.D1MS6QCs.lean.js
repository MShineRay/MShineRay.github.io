import{_ as r,c as t,a4 as a,o}from"./chunks/framework.D2q5ST7L.js";const f=JSON.parse('{"title":"vue","description":"","frontmatter":{},"headers":[],"relativePath":"work-notes/front-end/vue/index.md","filePath":"work-notes/front-end/vue/index.md"}'),n={name:"work-notes/front-end/vue/index.md"};function s(l,e,c,i,d,p){return o(),t("div",null,e[0]||(e[0]=[a('<h1 id="vue" tabindex="-1">vue <a class="header-anchor" href="#vue" aria-label="Permalink to &quot;vue&quot;">​</a></h1><h2 id="object-freeze" tabindex="-1"><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze" target="_blank" rel="noreferrer">Object.freeze</a> <a class="header-anchor" href="#object-freeze" aria-label="Permalink to &quot;[Object.freeze](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze)&quot;">​</a></h2><h2 id="观察-observe" tabindex="-1">观察 observe <a class="header-anchor" href="#观察-observe" aria-label="Permalink to &quot;观察 observe&quot;">​</a></h2><p>观察的方式就是深度遍历每一个属性，把每一个属性的读取和赋值变成函数</p><p>Object.defineProperty(obj, key, { get() { // ... }, set() { // ... } })</p><p>对象属性级别监听 Object.defineProperty 进行深度遍历，效率缺失</p><ul><li>无法监听属性的新增和删除</li></ul><p>// 观察 const proxy = new Proxy(obj, { get(){ }, set(){ } }) 对象级别监听，无需深度遍历，可以监听到属性的新增和删除</p>',8)]))}const h=r(n,[["render",s]]);export{f as __pageData,h as default};
